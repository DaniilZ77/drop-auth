apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres-auth
  name: postgres-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-auth
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres-auth
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: backend-auth-env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: backend-auth-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: backend-auth-env
          image: postgres:16.4-alpine
          livenessProbe:
            exec:
              command:
                - "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 10
          name: postgres-auth
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-auth-data
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
      restartPolicy: Always
      volumes:
        - name: postgres-auth-data
          persistentVolumeClaim:
            claimName: postgres-auth-data
